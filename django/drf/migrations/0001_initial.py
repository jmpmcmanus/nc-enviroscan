# Generated by Django 3.1.7 on 2021-04-06 20:00

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ejscreen_subset_geom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoid10', models.TextField(verbose_name=12)),
                ('d_ldpnt_2', models.FloatField(null=True)),
                ('d_dslpm_2', models.FloatField(null=True)),
                ('d_cancr_2', models.FloatField(null=True)),
                ('d_resp_2', models.FloatField(null=True)),
                ('d_ptraf_2', models.FloatField(null=True)),
                ('d_pwdis_2', models.FloatField(null=True)),
                ('d_pnpl_2', models.FloatField(null=True)),
                ('d_prmp_2', models.FloatField(null=True)),
                ('d_ptsdf_2', models.FloatField(null=True)),
                ('d_ozone_2', models.FloatField(null=True)),
                ('d_pm25_2', models.FloatField(null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
            ],
            options={
                'db_table': 'drf_ejscreen_subset_geom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ltdb_std_2012_sample_subset_geom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoid10', models.TextField(verbose_name=2)),
                ('pnhwht12', models.FloatField(null=True)),
                ('pnhblk12', models.FloatField(null=True)),
                ('phisp12', models.FloatField(null=True)),
                ('pasian12', models.FloatField(null=True)),
                ('pntv12', models.FloatField(null=True)),
                ('hincw12', models.FloatField(null=True)),
                ('hincb12', models.FloatField(null=True)),
                ('hinch12', models.FloatField(null=True)),
                ('hinca12', models.FloatField(null=True)),
                ('pwpov12', models.FloatField(null=True)),
                ('pbpov12', models.FloatField(null=True)),
                ('phpov12', models.FloatField(null=True)),
                ('papov12', models.FloatField(null=True)),
                ('pnapov12', models.FloatField(null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
            ],
            options={
                'db_table': 'drf_ltdb_std_2012_sample_subset_geom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ncwellwise_subset_20102019_geom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoid10', models.TextField(verbose_name=2)),
                ('arsenic_mean', models.FloatField(null=True)),
                ('arsenic_minimum', models.FloatField(null=True)),
                ('arsenic_maximum', models.FloatField(null=True)),
                ('arsenic_std', models.FloatField(null=True)),
                ('cadmium_mean', models.FloatField(null=True)),
                ('cadmium_minimum', models.FloatField(null=True)),
                ('cadmium_maximum', models.FloatField(null=True)),
                ('cadmium_std', models.FloatField(null=True)),
                ('lead_mean', models.FloatField(null=True)),
                ('lead_minimum', models.FloatField(null=True)),
                ('lead_maximum', models.FloatField(null=True)),
                ('lead_std', models.FloatField(null=True)),
                ('manganese_mean', models.FloatField(null=True)),
                ('manganese_minimum', models.FloatField(null=True)),
                ('manganese_maximum', models.FloatField(null=True)),
                ('manganese_std', models.FloatField(null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
            ],
            options={
                'db_table': 'drf_ncwellwise_subset_20102019_geom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ejscreen_subset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoid10', models.TextField(verbose_name=12)),
                ('d_ldpnt_2', models.FloatField(null=True)),
                ('d_dslpm_2', models.FloatField(null=True)),
                ('d_cancr_2', models.FloatField(null=True)),
                ('d_resp_2', models.FloatField(null=True)),
                ('d_ptraf_2', models.FloatField(null=True)),
                ('d_pwdis_2', models.FloatField(null=True)),
                ('d_pnpl_2', models.FloatField(null=True)),
                ('d_prmp_2', models.FloatField(null=True)),
                ('d_ptsdf_2', models.FloatField(null=True)),
                ('d_ozone_2', models.FloatField(null=True)),
                ('d_pm25_2', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ltdb_std_2012_sample_subset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoid10', models.TextField(verbose_name=11)),
                ('pnhwht12', models.FloatField(null=True)),
                ('pnhblk12', models.FloatField(null=True)),
                ('phisp12', models.FloatField(null=True)),
                ('pasian12', models.FloatField(null=True)),
                ('pntv12', models.FloatField(null=True)),
                ('hincw12', models.FloatField(null=True)),
                ('hincb12', models.FloatField(null=True)),
                ('hinch12', models.FloatField(null=True)),
                ('hinca12', models.FloatField(null=True)),
                ('pwpov12', models.FloatField(null=True)),
                ('pbpov12', models.FloatField(null=True)),
                ('phpov12', models.FloatField(null=True)),
                ('papov12', models.FloatField(null=True)),
                ('pnapov12', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='nc_census_bg_4326',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoid10', models.TextField(null=True, verbose_name=11)),
                ('total_pop', models.IntegerField()),
                ('onemapsdea', models.IntegerField()),
                ('shapestare', models.FloatField(null=True)),
                ('shapestlen', models.FloatField(null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='nc_census_tracks_4326',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoid10', models.TextField(null=True, verbose_name=11)),
                ('total_pop', models.IntegerField()),
                ('onemapsdea', models.IntegerField()),
                ('shapestare', models.FloatField(null=True)),
                ('shapestlen', models.FloatField(null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='nc_covid_zipcode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zipcode', models.TextField(verbose_name=5)),
                ('cases', models.IntegerField()),
                ('cases_per_10000_res', models.FloatField(null=True)),
                ('cases_per_100000_res', models.FloatField(null=True)),
                ('deaths', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ncwellwise_subset_20102019',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geoid10', models.TextField(verbose_name=11)),
                ('arsenic_mean', models.FloatField(null=True)),
                ('arsenic_minimum', models.FloatField(null=True)),
                ('arsenic_maximum', models.FloatField(null=True)),
                ('arsenic_std', models.FloatField(null=True)),
                ('cadmium_mean', models.FloatField(null=True)),
                ('cadmium_minimum', models.FloatField(null=True)),
                ('cadmium_maximum', models.FloatField(null=True)),
                ('cadmium_std', models.FloatField(null=True)),
                ('lead_mean', models.FloatField(null=True)),
                ('lead_minimum', models.FloatField(null=True)),
                ('lead_maximum', models.FloatField(null=True)),
                ('lead_std', models.FloatField(null=True)),
                ('manganese_mean', models.FloatField(null=True)),
                ('manganese_minimum', models.FloatField(null=True)),
                ('manganese_maximum', models.FloatField(null=True)),
                ('manganese_std', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='triangle_tracts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
                ('statefp10', models.TextField(null=True, verbose_name=2)),
                ('countyfp10', models.TextField(null=True, verbose_name=3)),
                ('tractce10', models.TextField(null=True, verbose_name=6)),
                ('geoid10', models.TextField(null=True, verbose_name=11)),
                ('name10', models.TextField(null=True, verbose_name=7)),
                ('namelsad10', models.TextField(null=True, verbose_name=20)),
                ('mtfcc10', models.TextField(null=True, verbose_name=5)),
                ('funcstat10', models.TextField(null=True, verbose_name=1)),
                ('aland10', models.FloatField(null=True)),
                ('awater10', models.FloatField(null=True)),
                ('intptlat10', models.TextField(null=True, verbose_name=11)),
                ('intptlon10', models.TextField(null=True, verbose_name=12)),
                ('layer', models.TextField(null=True, verbose_name=254)),
                ('path', models.TextField(null=True, verbose_name=254)),
            ],
        ),
        migrations.CreateModel(
            name='zip_code_areas_4326',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectid', models.IntegerField()),
                ('zcta5ce10', models.TextField(null=True, verbose_name=5)),
                ('affgeoid10', models.TextField(null=True, verbose_name=14)),
                ('geoid10', models.TextField(null=True, verbose_name=5)),
                ('aland10', models.IntegerField()),
                ('awater10', models.IntegerField()),
                ('shapestare', models.FloatField(null=True)),
                ('shapestlen', models.FloatField(null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
            ],
        ),
    ]
